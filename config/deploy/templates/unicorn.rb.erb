listen "/tmp/unicorn.<%= fetch(:unicorn_app_name) %>.sock"
pid "<%= fetch(:unicorn_pid) %>"
preload_app true
stderr_path "<%= unicorn_error_log_file %>"
stdout_path "<%= unicorn_log_file %>"
timeout 30
worker_processes <%= fetch(:unicorn_workers) %>
working_directory "<%= current_path %>"

before_exec do |server|
  ENV["BUNDLE_GEMFILE"] = "<%= current_path %>/Gemfile"
end

before_fork do |server, worker|
  defined?(ActiveRecord::Base) && ActiveRecord::Base.connection.disconnect!

  old_pid = "#{server.config[:pid]}.oldbin"
  if File.exists?(old_pid) && server.pid != old_pid
    begin
      sig = (worker.nr + 1) >= server.worker_processes ? :QUIT : :TTOU
      Process.kill(sig, File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
    end
  end

  Resque.redis.quit if defined?(Resque)
  sleep 1
end

after_fork do |server, worker|
  defined?(ActiveRecord::Base) && ActiveRecord::Base.establish_connection
  Resque.redis = 'localhost:6379' if defined?(Resque)
end
